<aura:component controller="redu_SelfRegister_LCTRL" implements="forceCommunity:availableForAllPageTypes">
	<aura:attribute name="accountId" type="String" required="false" description="accountId for creating the user. If not specified, it will create a PersonAccount if possible for B2C scenario. Or otherwise if it's in a community, the community's self-registration accountId will be used."/>
    <aura:attribute name="leadId" type="String" required="false" description="leadId for creating the user. If specified, contact will be created and converted from this lead"/>
    <aura:attribute name="regConfirmUrl" type="String" required="true"/>
    <aura:attribute name="startUrl" type="String" required="false" description="The url you go to after a successful login" />
    <aura:attribute name="showError" type="Boolean" required="true" description="" default="false" access="private"/>
    <aura:attribute name="errorMessage" type="String" required="false" description="" access="private"/>
    <aura:attribute name="firstnameLabel" type="String" required="false" default="First Name"/>
    <aura:attribute name="lastnameLabel" type="String" required="false" default="Last Name"/>
    <aura:attribute name="emailLabel" type="String" required="false" default="Email"/>
    <aura:attribute name="passwordLabel" type="String" required="false" default="Create Password"/>
    <aura:attribute name="confirmPasswordLabel" type="String" required="false" default="Confirm Password"/>    
    <aura:attribute name="submitButtonLabel" type="String" required="false" default="Sign Up"/>
    <aura:attribute name="includePasswordField" type="Boolean" required="false" default="false" description="Whether to include password"/>
    
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <aura:attribute name="expid" type="String" required="false" description="The branding experience ID" />
        
    <aura:registerevent name="sitePropagatedStartUrl" type="c:redu_SetStartURL"/>
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <aura:dependency resource="c:redu_SetStartURL" type="EVENT"/>    
        
    <aura:handler event="c:redu_SetStartURL" action="{!c.redu_SetStartUrl}"/>
    <aura:handler event="c:redu_SetExpId" action="{!c.redu_SetExpId}"/>    
    <aura:dependency resource="c:redu_SetExpId" type="EVENT"/>
    
    <aura:attribute name="emailParam" type="String" required="false" description="Email Parameter"/>
    <aura:attribute name="contactIdParam" type="String" required="false" description="Contact Id Parameter"/>
    <aura:attribute name="hashParam" type="String" required="false" description="Hash Parameter"/>

    <!-- Captcha -->    
    <aura:handler name="render" value="{!this}" action="{!c.onRender}" />    
    <aura:attribute name="recaptchaResponse" type="String" />
    <aura:attribute name="allowSubmission" type="Boolean" default="false"/>
    <aura:attribute name="captchaErrorMsg" type="String"/>
    <aura:attribute name="captchaEnabled" type="Boolean"/>
    
    <!-- Spinner -->
    <aura:handler event="aura:waiting" action="{!c.showSpinner}"/>
    <aura:handler event="aura:doneWaiting" action="{!c.hideSpinner}"/>        
    <aura:attribute name="spinner" type="boolean" default="FALSE"/>

    <div>
        
        <!-- Loading Spinner -->
        <aura:if isTrue="{!v.spinner}">
            <div aura:id="spinnerId" class="slds-spinner_container">
                <div class="slds-spinner--brand  slds-spinner slds-spinner--large slds-is-relative" role="alert">
                    <span class="slds-assistive-text">Loading...</span>
                    <div class="slds-spinner__dot-a"></div>
                    <div class="slds-spinner__dot-b"></div>
                </div>
            </div>
        </aura:if>

        <aura:renderIf isTrue="{!v.showError}">
            <div id="error">
                <ui:outputRichText value="{!v.errorMessage}"/>
            </div>
        </aura:renderIf>
        
        <div id="sfdc_username_container" class="sfdc">            
            <lightning:icon iconName="utility:user" size="x-small" title="" class="btnIconOverlay"/>
            <ui:inputText value="" aura:id="firstname" placeholder="{!v.firstnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
        </div>
        
        <div id="sfdc_nickname_container" class="sfdc">            
            <lightning:icon iconName="utility:user" size="x-small" title="" class="btnIconOverlay"/>                
            <ui:inputText value="" aura:id="lastname" placeholder="{!v.lastnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
        </div>
        
        <div id="sfdc_email_container" class="sfdc">            
            <lightning:icon iconName="utility:email" size="x-small" title="" class="btnIconOverlay"/>
            <ui:inputText value="" aura:id="email" placeholder="{!v.emailLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" disabled="{!v.emailParam}"/>
        </div>
        
        <aura:iteration aura:id="extraFields" items="{!v.extraFields}" var="curField" indexVar="index">
            <div id="sfdc_extrafield_container" class="sfdc">                
                <lightning:icon iconName="utility:user" size="x-small" title="" class="btnIconOverlay"/>
                <ui:inputText value="{!curField.value}" aura:id="{!curField.fieldPath}" placeholder="{!curField.label}" keyup="{!c.onKeyUp}" class="input sfdc_extrafieldinput sfdc"/>
            </div>
        </aura:iteration>
        
        <aura:renderIf isTrue="{!v.includePasswordField}">
            <div id="sfdc_password_container" class="sfdc">                
                <lightning:icon iconName="utility:lock" size="x-small" title="" class="btnIconOverlay"/>
                <ui:inputSecret value="" aura:id="password" placeholder="{!v.passwordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
            </div>
            
            <div id="sfdc_confirm_password_container" class="sfdc">                
                <lightning:icon iconName="utility:lock" size="x-small" title="" class="btnIconOverlay"/>
                <ui:inputSecret value="" aura:id="confirmPassword" placeholder="{!v.confirmPasswordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
            </div>
        </aura:renderIf>
        
        <!-- Captcha Element -->
        <aura:renderIf isTrue="{!v.captchaEnabled}">
            <br/>
            <div id="recaptchaCheckbox"></div>
            <br/>
        </aura:renderIf>
        
        <!-- Register Button -->
        <div class="sfdc">
            <ui:button aura:id="submitButton" label="{!v.submitButtonLabel}" press="{!c.handleSelfRegister}" class="sfdc_button"/>
        </div>
        
    </div>
    
</aura:component>